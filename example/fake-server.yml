AWSTemplateFormatVersion: '2010-09-09'
Description: 'Cumulus fake provider with ftp/sftp/http support'
Parameters:
  VpcId:
    Type: String
    Description: 'VPC ID used for the EC2 instance and security group'
  SubnetId:
    Type: String
    Description: 'The subnet to launch the EC2 instance in'
  AZone:
    Type: String
    Description: 'The availability zone for the subnet provided'
  Ngap:
    Type: String
    Description: 'True if deploying to an NGAP environment'
    Default: "false"
  Prefix:
    Type: String
    Description: 'Prefix to use for IAM role, instance profile'
Conditions:
  IsNgapEnvironment: !Equals [!Ref Ngap, 'true']


Resources:

  FakeProviderRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${Prefix}-iam-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      PermissionsBoundary:
        !If
          - IsNgapEnvironment
          - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/NGAPShRoleBoundary'
          - !Ref 'AWS::NoValue'
      Path: "/"
      Policies:
        - PolicyName: FakeProviderRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudwatch:GetMetricStatistics
                  - ecr:BatchCheckLayerAvailability
                  - ecr:BatchGetImage
                  - ecr:GetAuthorizationToken
                  - ecr:GetDownloadUrlForLayer
                  - ecs:DeregisterContainerInstance
                  - ecs:DescribeClusters
                  - ecs:DescribeContainerInstances
                  - ecs:DescribeServices
                  - ecs:DiscoverPollEndpoint
                  - ecs:ListContainerInstances
                  - ecs:ListServices
                  - ecs:ListTaskDefinitions
                  - ecs:ListTasks
                  - ecs:Poll
                  - ecs:RegisterContainerInstance
                  - ecs:RunTask
                  - ecs:StartTelemetrySession
                  - ecs:Submit*
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                Resource: "*"

              - Effect: Allow
                Action:
                  - s3:ListBucket*
                Resource:
                  - arn:aws:s3:::cumulus-data-shared

              - Effect: Allow
                Action:
                  - s3:GetObject*
                Resource:
                  - arn:aws:s3:::cumulus-data-shared/*

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub '${Prefix}-instanceProfile'
      Path: "/"
      Roles:
        - !Ref FakeProviderRole


  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${Prefix}-securitygroup'
      GroupDescription: Security Group for ECS containter instances of fakeprovider
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: '0'
          ToPort: '65535'
        - IpProtocol: udp
          CidrIp: 0.0.0.0/0
          FromPort: '0'
          ToPort: '65535'
      Tags:
        - Key: Name
          Value: "fakeprovider-ecs2"
      VpcId: !Ref VpcId

  FakeProvider:
    Type: AWS::ECS::Cluster

  FakeProviderEc2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: ami-03e7dd4efa9b91eda
      InstanceType: t2.micro
      AvailabilityZone: !Ref AZone
      IamInstanceProfile:
        Ref: InstanceProfile
      KeyName: mhuffnag
      NetworkInterfaces:
        - AssociatePublicIpAddress: false
          DeleteOnTermination: true
          Description: Main network interface
          DeviceIndex: 0
          GroupSet:
            - Fn::GetAtt:
              - SecurityGroup
              - GroupId
          SubnetId: !Ref SubnetId
      UserData:
        Fn::Base64:
          Fn::Sub: |
            #!/bin/bash
            service iptables stop
            echo ECS_CLUSTER=${FakeProvider} >> /etc/ecs/ecs.config
      Tags:
        - Key: Name
          Value: "FakeProvider Instance for ftp/sftp/http"
        - Key: Stack
          Value: !Ref Prefix


  FakeProviderTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      NetworkMode: host
      ContainerDefinitions:
        - Name: !Ref Prefix
          Cpu: 0
          Memory: 256
          Essential: true
          Environment:
            - Name: ON_AWS
              Value: 'true'
            - Name: TEST_DATA_S3_PATH
              Value: 's3://cumulus-data-shared/@cumulus/test-data/'
          Image: 'cumuluss/circleci:node-8.11-with-aws'
          Command:
            - 'start'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: FakeProviderEcsLogs
              awslogs-region:
                Fn::Sub: ${AWS::Region}

  FakeProviderEcsLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '${Prefix}EcsLogs'
      RetentionInDays: 30

  FakeProviderECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: FakeProvider
      DesiredCount: 1
      TaskDefinition:
        Ref: FakeProviderTaskDefinition

Outputs:
  FakeProviderIpAddress:
    Value:
      Fn::GetAtt:
        - FakeProviderEc2Instance
        - PrivateIp
